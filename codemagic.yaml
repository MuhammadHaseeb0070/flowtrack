# codemagic.yaml
workflows:
  android-build:
    name: Android Build
    instance_type: mac_mini_m1
    max_build_duration: 60
    environment:
      node: '18.17.0' # Or your specific Node.js version
      groups:
        - expo_credentials
      vars:
        EAS_BUILD_PROFILE: preview
        # Define the desired CLI versions here as variables
        # EXPO_CLI_VERSION: '10.0.1' # Or your desired expo-cli version, if still needed
        # No need to specify EAS_CLI_VERSION if installing @latest
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: main
          include: true
          source: true
    scripts:
      - name: Install Node.js dependencies
        script: |
          npm install
      - name: Verify local EAS CLI version
        script: |
          echo "Verifying local EAS CLI version from node_modules..."
          ./node_modules/.bin/eas --version
      - name: Log in to Expo
        script: |
          # Ensure  bncx is available from Codemagic environment variables
          if [ -z "$EXPO_TOKEN" ]; then
            echo "Error: EXPO_TOKEN is not set. Please ensure it's configured in Codemagic."
            exit 1
          fi
          echo "Attempting EAS login with token using local eas-cli..."
          ./node_modules/.bin/eas login --token "$EXPO_TOKEN"
      - name: Start EAS Build for Android
        script: |
          echo "Starting EAS Build with local eas-cli..."
          ./node_modules/.bin/eas build -p android --profile $EAS_BUILD_PROFILE --non-interactive --no-wait --output=./build-output.json
      - name: Wait for EAS Build to complete
        script: |
          BUILD_ID=$(jq -r '.id' build-output.json)
          if [ -z "$BUILD_ID" ]; then
            echo "Failed to get build ID from build-output.json"
            cat build-output.json
            exit 1
          fi
          echo "EAS Build ID: $BUILD_ID"
          
          TIMEOUT_MINUTES=45 
          COUNTER=0
          MAX_COUNTER=$((TIMEOUT_MINUTES * 60 / 30)) 

          while [ $COUNTER -lt $MAX_COUNTER ]; do
            BUILD_STATUS_JSON=$(./node_modules/.bin/eas build:view $BUILD_ID --json)
            BUILD_STATUS=$(echo $BUILD_STATUS_JSON | jq -r '.status')
            echo "Current build status: $BUILD_STATUS"

            if [ "$BUILD_STATUS" = "finished" ]; then
              ARTIFACT_URL=$(echo $BUILD_STATUS_JSON | jq -r '.artifacts.buildUrl')
              if [ -z "$ARTIFACT_URL" ]; then
                 echo "Build finished but no artifact URL found."
                 echo $BUILD_STATUS_JSON
                 exit 1
              fi
              echo "Build finished! Artifact URL: $ARTIFACT_URL"
              curl -o app-release.apk "$ARTIFACT_URL"
              echo "Artifact downloaded as app-release.apk"
              exit 0
            elif [ "$BUILD_STATUS" = "errored" ] || [ "$BUILD_STATUS" = "canceled" ]; then
              echo "Build failed or was canceled. Status: $BUILD_STATUS"
              echo $BUILD_STATUS_JSON
              exit 1
            fi
            
            COUNTER=$((COUNTER + 1))
            sleep 30
          done
          echo "Build timed out after $TIMEOUT_MINUTES minutes."
          exit 1
    artifacts:
      - app-release.apk
    # ... publishing ...
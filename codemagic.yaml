# codemagic.yaml
workflows:
  android-build:
    name: Android Build
    instance_type: mac_mini_m1
    max_build_duration: 60
    environment:
      node: '18.17.0' # Or your specific Node.js version
      groups:
        - expo_credentials
      vars:
        EAS_BUILD_PROFILE: preview
        # Define the desired CLI versions here as variables
        EAS_CLI_VERSION: '7.2.0'   # Replace with your eas --version
        EXPO_CLI_VERSION: '10.0.1' # Replace with your expo --version
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: main
          include: true
          source: true
    scripts:
      - name: Install Node.js dependencies
        script: |
          npm install
      - name: Install specific EAS CLI and Expo CLI versions
        script: |
          echo "Installing EAS CLI version $EAS_CLI_VERSION"
          npm install -g eas-cli@$EAS_CLI_VERSION
          echo "Installing Expo CLI version $EXPO_CLI_VERSION"
          npm install -g expo-cli@$EXPO_CLI_VERSION 
          # Verify versions
          echo "EAS CLI version: $(eas --version)"
          echo "Expo CLI version: $(expo --version)"
      - name: Log in to Expo
        script: |
          eas login --token ZCdUb2AGUdDWcZrxggn8Ff2UwOH94GGM9_3J1RRv
      - name: Start EAS Build for Android
        script: |
          eas build -p android --profile $EAS_BUILD_PROFILE --non-interactive --no-wait --output=./build-output.json
      - name: Wait for EAS Build to complete
        script: |
          # (The rest of the wait script remains the same as before)
          BUILD_ID=$(jq -r '.id' build-output.json)
          if [ -z "$BUILD_ID" ]; then
            echo "Failed to get build ID from build-output.json"
            cat build-output.json
            exit 1
          fi
          echo "EAS Build ID: $BUILD_ID"
          
          TIMEOUT_MINUTES=45 
          COUNTER=0
          MAX_COUNTER=$((TIMEOUT_MINUTES * 60 / 30)) 

          while [ $COUNTER -lt $MAX_COUNTER ]; do
            BUILD_STATUS_JSON=$(eas build:view $BUILD_ID --json)
            BUILD_STATUS=$(echo $BUILD_STATUS_JSON | jq -r '.status')
            echo "Current build status: $BUILD_STATUS"

            if [ "$BUILD_STATUS" = "finished" ]; then
              ARTIFACT_URL=$(echo $BUILD_STATUS_JSON | jq -r '.artifacts.buildUrl')
              if [ -z "$ARTIFACT_URL" ]; then
                 echo "Build finished but no artifact URL found."
                 echo $BUILD_STATUS_JSON
                 exit 1
              fi
              echo "Build finished! Artifact URL: $ARTIFACT_URL"
              curl -o app-release.apk "$ARTIFACT_URL"
              echo "Artifact downloaded as app-release.apk"
              exit 0
            elif [ "$BUILD_STATUS" = "errored" ] || [ "$BUILD_STATUS" = "canceled" ]; then
              echo "Build failed or was canceled. Status: $BUILD_STATUS"
              echo $BUILD_STATUS_JSON
              exit 1
            fi
            
            COUNTER=$((COUNTER + 1))
            sleep 30
          done
          echo "Build timed out after $TIMEOUT_MINUTES minutes."
          exit 1
    artifacts:
      - app-release.apk
    # ... publishing ...